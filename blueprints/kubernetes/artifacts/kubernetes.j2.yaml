tosca_definitions_version: tosca_simple_yaml_1_3 

node_types:

  sodalite.nodes.Kubernetes.Definition:
    derived_from: tosca.nodes.SoftwareComponent
  
  sodalite.nodes.Kubernetes.Kind:
    derived_from: tosca.nodes.SoftwareComponent

  # TODO: Full support is yet to be provided, currently output names
  sodalite.nodes.Kubernetes.Pod:  
    derived_from: tosca.nodes.Root 
    properties:  
      name:  
        description: Name of the pod
        required: True 
        type: string
      namespace:
        description: Kubernetes namespace
        required: True
        type: string

  sodalite.nodes.Kubernetes.Node:  
    derived_from: tosca.nodes.Compute
    capabilities:
      host:
        type: tosca.capabilities.Compute
        valid_source_types: [ sodalite.nodes.Kubernetes.Kind, sodalite.nodes.Kubernetes.Definition ]
    properties:  
      name:  
        description: Name of the node
        required: True 
        type: string 
      annotations:  
        required: False 
        type: map
        default: {}
      labels:  
        required: False 
        type: map
        default: {}
      gpu_selector:
        description: 'Selector for GPU node affinity. Format { "key": "label_name", "value": "label_value" }'
        type: map
        default: { "key": "accelerators/gpu", "value": "true" }
      edgetpu_selector:
        description: 'Selector for EdgeTPU node affinity. Format { "key": "label_name", "value": "label_value" }'
        type: map
        default: { "key": "accelerators/edgetpu", "value": "true" }
      cpus:  
        required: False 
        type: integer
        default: 0
      gpus:  
        required: False 
        type: integer
        default: 0
      edgetpus:  
        required: False 
        type: integer
        default: 0
      arm64_cpus:  
        required: False 
        type: integer
        default: 0
      amd64_cpus:  
        required: False 
        type: integer
        default: 0
      ready_status:
        type: boolean
        default: False
        description: Node is ready for deployment

topology_template:

  node_templates:

{% if pods_info | length  %}
{% for pod in pods_info.resources | default([]) %}
    pod-{{ pod.metadata.name | replace(" ","_") }}: 
      type: sodalite.nodes.Kubernetes.Pod
      properties:
        name: {{ pod.metadata.name }}
        namespace: {{ pod.metadata.namespace }}
{% endfor %}
{% endif %}

{% if nodes_info | length  %}
{% for node in nodes_info.resources | default([]) %}
    node-{{ node.metadata.name | replace(" ","_") }}: 
      type: sodalite.nodes.Kubernetes.Node
      properties:
        name: {{ node.metadata.name }}
{% if node.metadata.annotations  %}
        annotations:
{{ node.metadata.annotations | to_nice_yaml(indent=2) | indent(width=10, indentfirst=True) -}}
{% endif %}
{% if node.metadata.labels  %}
        labels:
{{ node.metadata.labels | to_nice_yaml(indent=2) | indent(width=10, indentfirst=True) -}}
{% endif %}
{% for condition in node.status.conditions | default([]) %}
{% if condition.type == "Ready"  %}
        ready_status: {{ condition.status == "True" }}
{% endif %}
{% endfor %}
{% for label, value in node.metadata.labels.items() | default({}) %}
{% if (label == "accelerators/ncs2" or label == "accelerators/edgetpu") and value == "true" %}
        edgetpus: 1
        edgetpu_selector: { "key": "{{ label }}", "value": "{{ value }}" }
{% elif (label == "accelerators/gpu" and value == "true") %}
        gpus: 1
        gpu_selector: { "key": "{{ label }}", "value": "{{ value }}" }
{% elif (label == "beta.kubernetes.io/arch" and value == "amd64") %}
        cpus: 1
        amd64_cpus: 1
{% elif (label == "beta.kubernetes.io/arch" and value == "arm64") %}
        cpus: 1
        arm64_cpus: 1
{% endif %}
{% endfor %}

{% endfor %}
{% endif %}