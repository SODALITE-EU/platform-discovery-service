tosca_definitions_version: tosca_simple_yaml_1_3 

node_types:

  sodalite.nodes.Kubernetes.Definition:
    derived_from: tosca.nodes.SoftwareComponent
  
  sodalite.nodes.Kubernetes.Kind:
    derived_from: tosca.nodes.SoftwareComponent

  sodalite.nodes.Kubernetes.Node:  
    derived_from: tosca.nodes.Compute
    capabilities:
      host:
        type: tosca.capabilities.Compute
        valid_source_types: [ sodalite.nodes.Kubernetes.Kind, sodalite.nodes.Kubernetes.Definition ]
    properties:  
      name:  
        description: Name of the node
        required: True 
        type: string 
      cpus:  
        required: False 
        type: integer
        default: 0
      gpus:  
        required: False 
        type: integer
        default: 0
      edgetpus:  
        required: False 
        type: integer
        default: 0
      arm64_cpus:  
        required: False 
        type: integer
        default: 0
      amd64_cpus:  
        required: False 
        type: integer
        default: 0
      ready_status:
        type: boolean
        default: False
        description: Node is ready for deployment

topology_template:

  node_templates:

{% if payload | length and nodes_info | length %}


{% for node in nodes_info.resources | default([]) %}
{% if node.metadata.name == payload.node %}

    node-{{ node.metadata.name | replace(" ","_") }}: 
      type: kube/sodalite.nodes.Kubernetes.Node
      properties:
        name: {{ node.metadata.name }}
{% for condition in node.status.conditions | default([]) %}
{% if condition.type == "Ready"  %}
        ready_status: {{ condition.status == "True" }}
{% endif %}
{% endfor %}

{% for label, value in node.metadata.labels.items() | default({}) %}
{% if (label == "beta.kubernetes.io/arch" and value == "amd64") %}
        cpus: 1
        amd64_cpus: 1
{% elif (label == "beta.kubernetes.io/arch" and value == "arm64") %}
        cpus: 1
        arm64_cpus: 1
{% endif %}
{% endfor %}

{% if (payload.labelsAdded["accelerators/edgetpu"] is defined and payload.labelsAdded["accelerators/edgetpu"] == "true")
      or 
      (payload.labelsUpdated["accelerators/edgetpu"] is defined and payload.labelsUpdated["accelerators/edgetpu"] == "true") %}
        edgetpus: 1
{% elif "accelerators/edgetpu" in payload.labelsDeleted %}
        edgetpus: 0
{% endif %}

{% if (payload.labelsAdded["accelerators/gpu"] is defined and payload.labelsAdded["accelerators/gpu"] == "true")
      or 
      (payload.labelsUpdated["accelerators/gpu"] is defined and payload.labelsUpdated["accelerators/gpu"] == "true") %}
        gpus: 1
{% elif "accelerators/gpu" in payload.labelsDeleted %}
        gpus: 0
{% endif %}

{% endif%}
{% endfor %}


{% elif nodes_info | length  %}
{% for node in nodes_info.resources | default([]) %}
    node-{{ node.metadata.name | replace(" ","_") }}: 
      type: kube/sodalite.nodes.Kubernetes.Node
      properties:
        name: {{ node.metadata.name }}
{% for condition in node.status.conditions | default([]) %}
{% if condition.type == "Ready"  %}
        ready_status: {{ condition.status == "True" }}
{% endif %}
{% endfor %}
{% for label, value in node.metadata.labels.items() | default({}) %}
{% if (label == "accelerators/edgetpu") and value == "true" %}
        edgetpus: 1
{% elif (label == "accelerators/gpu" and value == "true") %}
        gpus: 1
{% elif (label == "beta.kubernetes.io/arch" and value == "amd64") %}
        cpus: 1
        amd64_cpus: 1
{% elif (label == "beta.kubernetes.io/arch" and value == "arm64") %}
        cpus: 1
        arm64_cpus: 1
{% endif %}
{% endfor %}

{% endfor %}
{% endif %}