tosca_definitions_version: tosca_simple_yaml_1_3 

node_types:
  
  sodalite.nodes.hpc.wm.torque: 
    description: >
      torque wm, here we can define properties/attributes applicable for torque WM
    derived_from: tosca.nodes.Compute
    attributes:
      username:
        type: string

  sodalite.nodes.hpc.wm.torque.info: 
    derived_from: tosca.nodes.Root
    requirements:
      - host:
          node: sodalite.nodes.hpc.wm.torque
          capability: tosca.capabilities.Compute
          relationship: tosca.relationships.HostedOn   
    attributes:
      node_info:
        type: string      
      queue_info:
        type: string           
    interfaces:
        Standard:
          type: tosca.interfaces.node.lifecycle.Standard
          operations:
            create:
              inputs:
                wm_public_address:           { type: string, default: { get_attribute: [SELF, host, public_address] } }
                wm_username:                 { type: string, default: { get_attribute: [SELF, host, username] } }                
              implementation: 
                primary: playbooks/torque_get_info.yml


  sodalite.nodes.hpc.wm.torque.transform: 
    derived_from: tosca.nodes.Root
    properties:
      namespace:
        type: string 
    attributes:
      transformation_result:
        type: string    
    requirements:
      - wm:
          node: sodalite.nodes.hpc.wm.torque
          capability: tosca.capabilities.Root
          relationship: tosca.relationships.DependsOn  
      - info:
          node: sodalite.nodes.hpc.wm.torque.info
          capability: tosca.capabilities.Root
          relationship: tosca.relationships.DependsOn   
    interfaces:
        Standard:
          type: tosca.interfaces.node.lifecycle.Standard
          operations:
            create:
              inputs:
                frontend_address:              { type: string, default: { get_attribute: [SELF, wm, public_address] } }
                namespace:                     { type: string, default: { get_property: [SELF, namespace] } }
                node_info:                     { type: string, default: { get_attribute: [SELF, info, node_info] } }
                queue_info:                    { type: string, default: { get_attribute: [SELF, info, queue_info] } }
              implementation: 
                primary: playbooks/torque_transform_info.yml
                dependencies: 
                  - artifacts/torque.j2.yaml                

topology_template:

  inputs:
    frontend-address:
      type: string
    user:
      type: string
    namespace:
      type: string      

  node_templates:

    hpc-wm-torque:
      type: sodalite.nodes.hpc.wm.torque
      attributes:
        public_address: { get_input: frontend-address }
        username: { get_input: user }

    hpc-wm-torque-info:
      type: sodalite.nodes.hpc.wm.torque.info
      requirements:
        - host: hpc-wm-torque         

    hpc-wm-torque-transform:
      type: sodalite.nodes.hpc.wm.torque.transform
      properties:
        namespace: { get_input: namespace }
      requirements:
        - info: hpc-wm-torque-info  
        - wm: hpc-wm-torque 
                

  outputs:
    output-torque-tosca:      
      value: { get_attribute: [ hpc-wm-torque-transform, transformation_result ] }        